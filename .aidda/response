Below is the explanation and resolution.

──────────────────────────────
The issue isn’t that your DAG isn’t being stored properly but rather that you’re trying to retrieve a DAG‐CBOR node using the ipfs get command. ipfs get works for UnixFS (file/dir) nodes but not for arbitrary IPLD nodes (like the DAG‑CBOR nodes we created). When you try

  ipfs get bafyreibqo6hxj6ysrfbqy4lz62jjztdr267us4oxgltyexqkwm4yqii3ci

the IPFS daemon doesn’t know how to “render” that node as a file and so returns the error “unknown node type.”

──────────────────────────────
Two approaches to resolve this:

1. If your goal is simply to inspect the data, use the dag get command (which is designed for general IPLD nodes):

  ipfs dag get bafyreibqo6hxj6ysrfbqy4lz62jjztdr267us4oxgltyexqkwm4yqii3ci

This command will return the decoded DAG‑CBOR representation.

2. If you intended the DAG to be “file‐like” so you can use ipfs get (or ipfs cat) to retrieve file content, then you’d need to build a UnixFS node rather than wrapping the content with ipldcbor.WrapObject. That would involve (for example) constructing a dag-pb node (which uses UnixFS wrapping) so that the IPFS get command knows how to interpret it. (Note that doing so is more involved and would require you to create the PB node with a proper UnixFS data structure.) 

──────────────────────────────
In your case, since you are creating a generic DAG of three nodes using DAG‑CBOR, it is best to use “ipfs dag get” for retrieval.

There’s no bug in your three‐node DAG construction—the error is simply due to retrieving a non‐UnixFS IPLD node with a command that expects UnixFS formatting.

──────────────────────────────
In summary, use the following command to view your root node:

  ipfs dag get bafyreibqo6hxj6ysrfbqy4lz62jjztdr267us4oxgltyexqkwm4yqii3ci

This change (or clarification in your documentation) should resolve the “unknown node type” error.

──────────────────────────────
Note on the Code and API Versions:

• The code uses ipldcbor.WrapObject and the newly recommended RPC client from the Kubo repo. Make sure you’re running on a recent IPFS (Kubo) version that supports dag operations on DAG‑CBOR nodes. (The examples here follow guidance from 2024–2025 so they should be current.)

Happy coding!